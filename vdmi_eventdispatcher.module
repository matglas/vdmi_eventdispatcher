<?php

use Symfony\Component\EventDispatcher\EventDispatcher;
use Symfony\Component\EventDispatcher\Event;
use Drupal\vdmi_eventdispatcher\EventSubscriber\StockMarketSubscriber;

/**
 * Implementation of a Bank to transfer money.
 */
class Bank {
  private $dispatcher = null;

  function __construct(EventDispatcher $dispatcher) {
    $this->dispatcher = $dispatcher;
  } 

  function moneyTransfer($amount) {
    $this->dispatcher->dispatch('bank.money_transfer', new Event());
  }
}

/**
 * Implementation of a StockMarket that want t know about bank money.
 */
class StockMarket {
  private $dispatcher = null;

  function __construct(EventDispatcher $dispatcher) {
    $this->dispatcher = $dispatcher;
    $this->dispatcher->addListener(
      'bank.money_transfer', 
      array($this, 'onMoneyTransfer')
    );
  }  

  function onMoneyTransfer(Event $event) {
    drupal_set_message('Money was transferred', 'status', TRUE);
  }
}

function vdmi_eventdispatcher_preprocess_page(&$variables) {

  // Basic example.
  $bankDispatcher = new EventDispatcher();
  $bank = new Bank($bankDispatcher);
  $stockMarket = new StockMarket($bankDispatcher);

  $bank->moneyTransfer(30);

  // Subscriber example
  
  // Retrieving the central event dispatcher.
  $event_dispatcher = Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch('bank.money_transfer', new Event());
}
